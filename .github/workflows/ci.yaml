name: docker release

on:
  push:
    branches:
      - master
    paths:
      - '**'
      - '!README.md'
      - '!docs/**'
      - '!.github/**'
  workflow_run:
    workflows: [ "Update MMDB Databases" ]
    types:
      - completed
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 安装 Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.25.0

      # 下载依赖
      - name: Download Go modules
        run: go mod download

      # 编译 Go 程序
      - name: Build Go project
        run: go build -v ./...

      # 运行测试
      - name: Run Go tests
        run: go test -v ./...

      # 设置 QEMU
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 设置 Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 登录 Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 构建并推送多架构 Docker 镜像
      - name: Build and push multi-arch Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/risk-api:${{ github.run_id }}
            ${{ secrets.DOCKER_USERNAME }}/risk-api:latest

      - name: Wait for registry propagation
        run: sleep 3

      # Service Redeploy
      - name: Redeploy Koyeb service
        env:
          KOYEB_API_TOKEN: ${{ secrets.KOYEB_API_TOKEN }}   # 在 Repo Secrets 里设置
          KOYEB_SERVICE_ID: ${{ secrets.KOYEB_SERVICE_ID }} # 在 Koyeb 控台或 API 获取
        run: |
          set -euo pipefail
          echo "Triggering redeploy for service ${KOYEB_SERVICE_ID: -4}..."
          HTTP_CODE=$(curl -sS -X POST \
            -H "Authorization: Bearer ${KOYEB_API_TOKEN}" \
            -H "Content-Type: application/json" \
            -d '{}' \
            -o /tmp/koyeb_resp.json \
            -w "%{http_code}" \
            "https://app.koyeb.com/v1/services/${KOYEB_SERVICE_ID}/redeploy")
          echo "Koyeb API HTTP ${HTTP_CODE}"
          if [ "${HTTP_CODE}" -lt 200 ] || [ "${HTTP_CODE}" -ge 300 ]; then
            echo "Redeploy failed. Response body:"
            cat /tmp/koyeb_resp.json
            exit 1
          fi
          echo "Redeploy triggered successfully."

